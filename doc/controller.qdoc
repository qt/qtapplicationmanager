/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Copyright (C) 2019 Luxoft Sweden AB
** Copyright (C) 2018 Pelagicore AG
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page appman-controller.html
\title Controller
\brief A command-line utility to remote control the application manager on a target device.
\ingroup qtappman-tools

The \c{appman-controller} is a command-line utility that can be used by the developer, or
indirectly by other tools, on the target device to control the application manager without
communicating directly with its D-Bus interface.

\note In order to use this tool, the application manager has to be connected to either a session- or
system-bus; don't run it with \c{--dbus none}.

The following commands are available:

\table
\header
    \li Command
    \li Arguments
    \li Description
\row
    \li \span {style="white-space: nowrap"} {\c start-application}
    \li \c{<application-id>}

        \c{[document-url]} [optional]
    \li Starts the application with \c application-id within the application manager.
\row
    \li \span {style="white-space: nowrap"} {\c debug-application}
    \li \c{<debug-wrapper-specification>}

        \c{<application-id>}

        \c{[document-url]} [optional]
    \li Starts the application with \c application-id within the application manager using
        a debug-wrapper. For more information, see \l{DebugWrappers}.
\row
    \li \span {style="white-space: nowrap"} {\c stop-application}
    \li \c{<application-id>}
    \li Stops the application with \c application-id.
\row
    \li \span {style="white-space: nowrap"} {\c stop-all-applications}
    \li (none)
    \li Stops all applications that are running within the application manager.
\row
    \li \span {style="white-space: nowrap"} {\c list-applications}
    \li (none)
    \li Outputs all available application IDs on the console, one per line.
\row
    \li \span {style="white-space: nowrap"} {\c show-application}
    \li \c{<application-id>}
    \li Shows the current metadata for the given application in YAML format. Alternatively, use
        \c{--json} to get the metadata in JSON format instead.
\row
    \li \span {style="white-space: nowrap"} {\c list-packages}
    \li (none)
    \li Outputs all available package IDs on the console, one per line.
\row
    \li \span {style="white-space: nowrap"} {\c show-package}
    \li \c{<package-id>}
    \li Shows the current metadata for the given package in YAML format. Alternatively, use
        \c{--json} to get the metadata in JSON format instead.
\row
    \li \span {style="white-space: nowrap"} {\c install-package}
    \li \c{<package>}
    \li Installs the package given on the command-line. If the package file is specified as \c{-},
        the tool tries to read the package from \c stdin. The following options are supported:

        \c{-a, --acknowledge}: Automatically acknowledge the installation, instead of relying on
        the System UI's logic.
\row
    \li \span {style="white-space: nowrap"} {\c remove-package}
    \li \c{<package-id>}
    \li Removes the package, specified with \c package-id. The following options are
        supported:

        \c{-f, --force}: Force removal of package.

        \c{-k, --keep-documents}: Keep the document folder of the package.
\row
    \li \span {style="white-space: nowrap"} {\c list-installation-locations}
    \li (none)
    \li Lists all installaton locations.
\row
    \li \span {style="white-space: nowrap"} {\c show-installation-location}
    \li \c{<installation-location>}
    \li Shows details for the specified \c installation-location in YAML format. Alternatively, use
        \c{--json} to get the location details in JSON format instead.
\endtable

The \c{appman-controller} naturally supports the standard Unix \c{--help} command-line option.
*/
