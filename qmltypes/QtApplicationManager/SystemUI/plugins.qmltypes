import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the application manager.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// appman-dumpqmltypes

Module {
    dependencies: [ "QtQuick.Window 6.5", "QtQuick 6.5" ]
    Component {
        name: "ProcessStatus"
        exports: [ "QtApplicationManager.SystemUI/ProcessStatus 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        Property { name: "applicationId"; type: "string"; }
        Property { name: "processId"; type: "int"; isReadonly: true }
        Property { name: "cpuLoad"; type: "double"; isReadonly: true }
        Property { name: "memoryVirtual"; type: "QVariantMap"; isReadonly: true }
        Property { name: "memoryRss"; type: "QVariantMap"; isReadonly: true }
        Property { name: "memoryPss"; type: "QVariantMap"; isReadonly: true }
        Property { name: "memoryReportingEnabled"; type: "bool"; }
        Property { name: "roleNames"; type: "QStringList"; isReadonly: true }
        Signal {
            name: "applicationIdChanged"
            Parameter { name: "applicationId"; type: "string"; }
        }
        Signal {
            name: "processIdChanged"
            Parameter { name: "processId"; type: "int"; }
        }
        Signal {
            name: "cpuLoadChanged"
        }
        Signal {
            name: "memoryReportingChanged"
            Parameter { name: "memoryVirtual"; type: "QVariantMap"; }
            Parameter { name: "memoryRss"; type: "QVariantMap"; }
            Parameter { name: "memoryPss"; type: "QVariantMap"; }
        }
        Signal {
            name: "memoryReportingEnabledChanged"
            Parameter { name: "enabled"; type: "bool"; }
        }
        Method {
            name: "update"
        }
    }
    Component {
        name: "IntentModel"
        exports: [ "QtApplicationManager.SystemUI/IntentModel 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "filterFunction"; type: "QJSValue"; }
        Property { name: "sortFunction"; type: "QJSValue"; }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "filterFunctionChanged"
        }
        Signal {
            name: "sortFunctionChanged"
        }
        Method {
            name: "indexOfIntent"
            type: "int"
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "parameters"; type: "QVariantMap"; }
        }
        Method {
            name: "indexOfIntent"
            type: "int"
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "indexOfIntent"
            type: "int"
            Parameter { name: "intent"; type: "Intent"; isPointer: true; }
        }
        Method {
            name: "mapToSource"
            type: "int"
            Parameter { name: "ourIndex"; type: "int"; }
        }
        Method {
            name: "mapFromSource"
            type: "int"
            Parameter { name: "sourceIndex"; type: "int"; }
        }
    }
    Component {
        name: "Intent"
        exports: [ "QtApplicationManager.SystemUI/IntentObject 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isCreatable: false
        Enum { name: "Visibility"; values: [ "Public", "Private" ] }
        Property { name: "intentId"; type: "string"; isReadonly: true }
        Property { name: "packageId"; type: "string"; isReadonly: true }
        Property { name: "applicationId"; type: "string"; isReadonly: true }
        Property { name: "visibility"; type: "Visibility"; isReadonly: true }
        Property { name: "requiredCapabilities"; type: "QStringList"; isReadonly: true }
        Property { name: "parameterMatch"; type: "QVariantMap"; isReadonly: true }
        Property { name: "icon"; type: "QUrl"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "names"; type: "QVariantMap"; isReadonly: true }
        Property { name: "description"; type: "string"; isReadonly: true }
        Property { name: "descriptions"; type: "QVariantMap"; isReadonly: true }
        Property { name: "categories"; type: "QStringList"; isReadonly: true }
    }
    Component {
        name: "IntentServer"
        exports: [ "QtApplicationManager.SystemUI/IntentServer 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QAbstractListModel"
        isSingleton: true
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal {
            name: "intentAdded"
            Parameter { name: "intent"; type: "Intent"; isPointer: true; }
        }
        Signal {
            name: "intentAboutToBeRemoved"
            Parameter { name: "intent"; type: "Intent"; isPointer: true; }
        }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "disambiguationRequest"
            Parameter { name: "requestId"; type: "QUuid"; }
            Parameter { name: "potentialIntents"; type: "QList<QObject*>"; }
            Parameter { name: "parameters"; type: "QVariantMap"; }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "intent"
            type: "Intent"; isPointer: true;
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "applicationIntent"
            type: "Intent"; isPointer: true;
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "parameters"; type: "QVariantMap"; }
        }
        Method {
            name: "applicationIntent"
            type: "Intent"; isPointer: true;
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "packageIntent"
            type: "Intent"; isPointer: true;
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "packageId"; type: "string"; }
            Parameter { name: "parameters"; type: "QVariantMap"; }
        }
        Method {
            name: "packageIntent"
            type: "Intent"; isPointer: true;
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "packageId"; type: "string"; }
        }
        Method {
            name: "packageIntent"
            type: "Intent"; isPointer: true;
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "packageId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "parameters"; type: "QVariantMap"; }
        }
        Method {
            name: "packageIntent"
            type: "Intent"; isPointer: true;
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "packageId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "indexOfIntent"
            type: "int"
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "parameters"; type: "QVariantMap"; }
        }
        Method {
            name: "indexOfIntent"
            type: "int"
            Parameter { name: "intentId"; type: "string"; }
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "indexOfIntent"
            type: "int"
            Parameter { name: "intent"; type: "Intent"; isPointer: true; }
        }
        Method {
            name: "acknowledgeDisambiguationRequest"
            Parameter { name: "requestId"; type: "QUuid"; }
            Parameter { name: "selectedIntent"; type: "Intent"; isPointer: true; }
        }
        Method {
            name: "rejectDisambiguationRequest"
            Parameter { name: "requestId"; type: "QUuid"; }
        }
    }
    Component {
        name: "WindowItem"
        exports: [ "QtApplicationManager.SystemUI/WindowItem 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QQuickItem"
        Property { name: "window"; type: "Window"; isPointer: true; }
        Property { name: "primary"; type: "bool"; isReadonly: true }
        Property { name: "objectFollowsItemSize"; type: "bool"; }
        Property { name: "contentItemData"; type: "QQmlListProperty<QObject>"; isReadonly: true }
        Signal {
            name: "windowChanged"
        }
        Signal {
            name: "primaryChanged"
        }
        Signal {
            name: "objectFollowsItemSizeChanged"
        }
        Signal {
            name: "contentItemDataChanged"
        }
        Method {
            name: "makePrimary"
        }
    }
    Component {
        name: "Window"
        exports: [ "QtApplicationManager.SystemUI/WindowObject 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isCreatable: false
        Enum { name: "ContentState"; values: [ "SurfaceWithContent", "SurfaceNoContent", "NoSurface" ] }
        Property { name: "size"; type: "QSize"; isReadonly: true }
        Property { name: "contentState"; type: "ContentState"; isReadonly: true }
        Property { name: "application"; type: "Application"; isPointer: true; isReadonly: true }
        Property { name: "popup"; type: "bool"; isReadonly: true }
        Property { name: "requestedPopupPosition"; type: "QPoint"; isReadonly: true }
        Signal {
            name: "sizeChanged"
        }
        Signal {
            name: "windowPropertyChanged"
            Parameter { name: "name"; type: "string"; }
            Parameter { name: "value"; type: "QVariant"; }
        }
        Signal {
            name: "isBeingDisplayedChanged"
        }
        Signal {
            name: "contentStateChanged"
        }
        Signal {
            name: "requestedPopupPositionChanged"
        }
        Method {
            name: "setWindowProperty"
            type: "bool"
            Parameter { name: "name"; type: "string"; }
            Parameter { name: "value"; type: "QVariant"; }
        }
        Method {
            name: "windowProperty"
            type: "QVariant"
            Parameter { name: "name"; type: "string"; }
        }
        Method {
            name: "windowProperties"
            type: "QVariantMap"
        }
        Method {
            name: "close"
        }
        Method {
            name: "resize"
            Parameter { name: "size"; type: "QSize"; }
        }
    }
    Component {
        name: "WindowManager"
        exports: [ "QtApplicationManager.SystemUI/WindowManager 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QAbstractListModel"
        isSingleton: true
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "runningOnDesktop"; type: "bool"; isReadonly: true }
        Property { name: "slowAnimations"; type: "bool"; }
        Property { name: "allowUnknownUiClients"; type: "bool"; isReadonly: true }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "raiseApplicationWindow"
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "applicationAliasId"; type: "string"; }
        }
        Signal {
            name: "windowAdded"
            Parameter { name: "window"; type: "Window"; isPointer: true; }
        }
        Signal {
            name: "windowAboutToBeRemoved"
            Parameter { name: "window"; type: "Window"; isPointer: true; }
        }
        Signal {
            name: "windowContentStateChanged"
            Parameter { name: "window"; type: "Window"; isPointer: true; }
        }
        Signal {
            name: "windowPropertyChanged"
            Parameter { name: "window"; type: "Window"; isPointer: true; }
            Parameter { name: "name"; type: "string"; }
            Parameter { name: "value"; type: "QVariant"; }
        }
        Signal {
            name: "compositorViewRegistered"
            Parameter { name: "view"; type: "QQuickWindow"; isPointer: true; }
        }
        Signal {
            name: "shutDownFinished"
        }
        Signal {
            name: "slowAnimationsChanged"
            Parameter { name: ""; type: "bool"; }
        }
        Method {
            name: "count"
            type: "int"
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "window"
            type: "Window"; isPointer: true;
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "windowsOfApplication"
            type: "QList<QObject*>"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "indexOfWindow"
            type: "int"
            Parameter { name: "window"; type: "Window"; isPointer: true; }
        }
        Method {
            name: "addExtension"
            type: "QObject"; isPointer: true;
            Parameter { name: "component"; type: "QQmlComponent"; isPointer: true; }
        }
        Method {
            name: "makeScreenshot"
            type: "bool"
            Parameter { name: "filename"; type: "string"; }
            Parameter { name: "selector"; type: "string"; }
        }
    }
    Component {
        name: "Am"
        exports: [ "QtApplicationManager.SystemUI/Am 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isCreatable: false
        Enum { name: "ExitStatus"; values: [ "NormalExit", "CrashExit", "ForcedExit" ] }
        Enum { name: "RunState"; values: [ "NotRunning", "StartingUp", "Running", "ShuttingDown" ] }
        Enum { name: "ProcessError"; values: [ "FailedToStart", "Crashed", "Timedout", "ReadError", "WriteError", "UnknownError" ] }
    }
    Component {
        name: "ApplicationModel"
        exports: [ "QtApplicationManager.SystemUI/ApplicationModel 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "filterFunction"; type: "QJSValue"; }
        Property { name: "sortFunction"; type: "QJSValue"; }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "filterFunctionChanged"
        }
        Signal {
            name: "sortFunctionChanged"
        }
        Method {
            name: "indexOfApplication"
            type: "int"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "indexOfApplication"
            type: "int"
            Parameter { name: "application"; type: "Application"; isPointer: true; }
        }
        Method {
            name: "mapToSource"
            type: "int"
            Parameter { name: "ourIndex"; type: "int"; }
        }
        Method {
            name: "mapFromSource"
            type: "int"
            Parameter { name: "sourceIndex"; type: "int"; }
        }
    }
    Component {
        name: "AbstractContainer"
        exports: [ "QtApplicationManager.SystemUI/Container 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isCreatable: false
        Property { name: "controlGroup"; type: "string"; }
        Signal {
            name: "ready"
        }
        Signal {
            name: "memoryLowWarning"
        }
        Signal {
            name: "memoryCriticalWarning"
        }
        Signal {
            name: "applicationChanged"
            Parameter { name: "newApplication"; type: "Application"; isPointer: true; }
        }
        Signal {
            name: "controlGroupChanged"
            Parameter { name: "controlGroup"; type: "string"; }
        }
    }
    Component {
        name: "AbstractRuntime"
        exports: [ "QtApplicationManager.SystemUI/Runtime 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isCreatable: false
        Property { name: "container"; type: "AbstractContainer"; isPointer: true; isReadonly: true }
        Signal {
            name: "stateChanged"
            Parameter { name: "newState"; type: "RunState"; }
        }
        Signal {
            name: "finished"
            Parameter { name: "exitCode"; type: "int"; }
            Parameter { name: "status"; type: "ExitStatus"; }
        }
        Signal {
            name: "inProcessSurfaceItemReady"
            Parameter { name: "window"; type: "InProcessSurfaceItem>"; }
        }
    }
    Component {
        name: "Application"
        exports: [ "QtApplicationManager.SystemUI/ApplicationObject 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isCreatable: false
        Enum { name: "State"; values: [ "Installed", "BeingInstalled", "BeingUpdated", "BeingDowngraded", "BeingRemoved" ] }
        Property { name: "id"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "names"; type: "QVariantMap"; isReadonly: true }
        Property { name: "description"; type: "string"; isReadonly: true }
        Property { name: "descriptions"; type: "QVariantMap"; isReadonly: true }
        Property { name: "categories"; type: "QStringList"; isReadonly: true }
        Property { name: "icon"; type: "QUrl"; isReadonly: true }
        Property { name: "runtimeName"; type: "string"; isReadonly: true }
        Property { name: "runtimeParameters"; type: "QVariantMap"; isReadonly: true }
        Property { name: "capabilities"; type: "QStringList"; isReadonly: true }
        Property { name: "documentUrl"; type: "string"; isReadonly: true }
        Property { name: "supportedMimeTypes"; type: "QStringList"; isReadonly: true }
        Property { name: "applicationProperties"; type: "QVariantMap"; isReadonly: true }
        Property { name: "runtime"; type: "AbstractRuntime"; isPointer: true; isReadonly: true }
        Property { name: "lastExitCode"; type: "int"; isReadonly: true }
        Property { name: "lastExitStatus"; type: "ExitStatus"; isReadonly: true }
        Property { name: "codeDir"; type: "string"; isReadonly: true }
        Property { name: "runState"; type: "RunState"; isReadonly: true }
        Property { name: "package"; type: "Package"; isPointer: true; isReadonly: true }
        Property { name: "builtIn"; type: "bool"; isReadonly: true }
        Property { name: "alias"; type: "bool"; isReadonly: true }
        Property { name: "nonAliased"; type: "Application"; isPointer: true; isReadonly: true }
        Property { name: "version"; type: "string"; isReadonly: true }
        Property { name: "state"; type: "State"; isReadonly: true }
        Property { name: "blocked"; type: "bool"; isReadonly: true }
        Property { name: "supportsApplicationInterface"; type: "bool"; isReadonly: true }
        Signal {
            name: "bulkChange"
        }
        Signal {
            name: "runtimeChanged"
        }
        Signal {
            name: "lastExitCodeChanged"
        }
        Signal {
            name: "lastExitStatusChanged"
        }
        Signal {
            name: "activated"
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "State"; }
        }
        Signal {
            name: "runStateChanged"
            Parameter { name: "state"; type: "RunState"; }
        }
        Signal {
            name: "blockedChanged"
            Parameter { name: "blocked"; type: "bool"; }
        }
        Method {
            name: "start"
            type: "bool"
            Parameter { name: "documentUrl"; type: "string"; }
        }
        Method {
            name: "start"
            type: "bool"
        }
        Method {
            name: "debug"
            type: "bool"
            Parameter { name: "debugWrapper"; type: "string"; }
            Parameter { name: "documentUrl"; type: "string"; }
        }
        Method {
            name: "debug"
            type: "bool"
            Parameter { name: "debugWrapper"; type: "string"; }
        }
        Method {
            name: "stop"
            Parameter { name: "forceKill"; type: "bool"; }
        }
        Method {
            name: "stop"
        }
    }
    Component {
        name: "NotificationManager"
        exports: [ "QtApplicationManager.SystemUI/NotificationManager 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QAbstractListModel"
        isSingleton: true
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "notificationAdded"
            Parameter { name: "id"; type: "uint"; }
        }
        Signal {
            name: "notificationAboutToBeRemoved"
            Parameter { name: "id"; type: "uint"; }
        }
        Signal {
            name: "notificationChanged"
            Parameter { name: "id"; type: "uint"; }
            Parameter { name: "rolesChanged"; type: "QStringList"; }
        }
        Method {
            name: "count"
            type: "int"
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "notification"
            type: "QVariantMap"
            Parameter { name: "id"; type: "uint"; }
        }
        Method {
            name: "indexOfNotification"
            type: "int"
            Parameter { name: "id"; type: "uint"; }
        }
        Method {
            name: "acknowledgeNotification"
            Parameter { name: "id"; type: "uint"; }
        }
        Method {
            name: "triggerNotificationAction"
            Parameter { name: "id"; type: "uint"; }
            Parameter { name: "actionId"; type: "string"; }
        }
        Method {
            name: "dismissNotification"
            Parameter { name: "id"; type: "uint"; }
        }
    }
    Component {
        name: "PackageManager"
        exports: [ "QtApplicationManager.SystemUI/PackageManager 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QAbstractListModel"
        isSingleton: true
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "allowInstallationOfUnsignedPackages"; type: "bool"; isReadonly: true }
        Property { name: "developmentMode"; type: "bool"; isReadonly: true }
        Property { name: "hardwareId"; type: "string"; isReadonly: true }
        Property { name: "ready"; type: "bool"; isReadonly: true }
        Property { name: "installationLocation"; type: "QVariantMap"; isReadonly: true }
        Property { name: "documentLocation"; type: "QVariantMap"; isReadonly: true }
        Property { name: "applicationUserIdSeparation"; type: "bool"; isReadonly: true }
        Property { name: "commonApplicationGroupId"; type: "uint"; isReadonly: true }
        Signal {
            name: "readyChanged"
            Parameter { name: "b"; type: "bool"; }
        }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "packageAdded"
            Parameter { name: "id"; type: "string"; }
        }
        Signal {
            name: "packageAboutToBeRemoved"
            Parameter { name: "id"; type: "string"; }
        }
        Signal {
            name: "packageChanged"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "changedRoles"; type: "QStringList"; }
        }
        Signal {
            name: "taskStarted"
            Parameter { name: "taskId"; type: "string"; }
        }
        Signal {
            name: "taskProgressChanged"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "progress"; type: "double"; }
        }
        Signal {
            name: "taskFinished"
            Parameter { name: "taskId"; type: "string"; }
        }
        Signal {
            name: "taskFailed"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "errorCode"; type: "int"; }
            Parameter { name: "errorString"; type: "string"; }
        }
        Signal {
            name: "taskStateChanged"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "newState"; type: "TaskState"; }
        }
        Signal {
            name: "taskRequestingInstallationAcknowledge"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "package"; type: "Package"; isPointer: true; }
            Parameter { name: "packageExtraMetaData"; type: "QVariantMap"; }
            Parameter { name: "packageExtraSignedMetaData"; type: "QVariantMap"; }
        }
        Signal {
            name: "taskBlockingUntilInstallationAcknowledge"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "package"
            type: "Package"; isPointer: true;
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "package"
            type: "Package"; isPointer: true;
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "indexOfPackage"
            type: "int"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "packageIds"
            type: "QStringList"
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "packageId"; type: "string"; }
        }
        Method {
            name: "installedPackageSize"
            type: "int"
            Parameter { name: "packageId"; type: "string"; }
        }
        Method {
            name: "installedPackageExtraMetaData"
            type: "QVariantMap"
            Parameter { name: "packageId"; type: "string"; }
        }
        Method {
            name: "installedPackageExtraSignedMetaData"
            type: "QVariantMap"
            Parameter { name: "packageId"; type: "string"; }
        }
        Method {
            name: "startPackageInstallation"
            type: "string"
            Parameter { name: "sourceUrl"; type: "string"; }
        }
        Method {
            name: "acknowledgePackageInstallation"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "removePackage"
            type: "string"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "keepDocuments"; type: "bool"; }
            Parameter { name: "force"; type: "bool"; }
        }
        Method {
            name: "removePackage"
            type: "string"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "keepDocuments"; type: "bool"; }
        }
        Method {
            name: "taskState"
            type: "TaskState"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "taskPackageId"
            type: "string"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "activeTaskIds"
            type: "QStringList"
        }
        Method {
            name: "cancelTask"
            type: "bool"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "compareVersions"
            type: "int"
            Parameter { name: "version1"; type: "string"; }
            Parameter { name: "version2"; type: "string"; }
        }
        Method {
            name: "validateDnsName"
            type: "bool"
            Parameter { name: "name"; type: "string"; }
            Parameter { name: "minimumParts"; type: "int"; }
        }
        Method {
            name: "validateDnsName"
            type: "bool"
            Parameter { name: "name"; type: "string"; }
        }
    }
    Component {
        name: "ApplicationInstaller"
        exports: [ "QtApplicationManager.SystemUI/ApplicationInstaller 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QObject"
        isSingleton: true
        Property { name: "allowInstallationOfUnsignedPackages"; type: "bool"; isReadonly: true }
        Property { name: "developmentMode"; type: "bool"; isReadonly: true }
        Property { name: "applicationUserIdSeparation"; type: "bool"; isReadonly: true }
        Property { name: "commonApplicationGroupId"; type: "uint"; isReadonly: true }
        Signal {
            name: "taskStarted"
            Parameter { name: "taskId"; type: "string"; }
        }
        Signal {
            name: "taskProgressChanged"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "progress"; type: "double"; }
        }
        Signal {
            name: "taskFinished"
            Parameter { name: "taskId"; type: "string"; }
        }
        Signal {
            name: "taskFailed"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "errorCode"; type: "int"; }
            Parameter { name: "errorString"; type: "string"; }
        }
        Signal {
            name: "taskStateChanged"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "newState"; type: "TaskState"; }
        }
        Signal {
            name: "taskRequestingInstallationAcknowledge"
            Parameter { name: "taskId"; type: "string"; }
            Parameter { name: "applicationAsVariantMap"; type: "QVariantMap"; }
            Parameter { name: "packageExtraMetaData"; type: "QVariantMap"; }
            Parameter { name: "packageExtraSignedMetaData"; type: "QVariantMap"; }
        }
        Signal {
            name: "taskBlockingUntilInstallationAcknowledge"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "installationLocationIds"
            type: "QStringList"
        }
        Method {
            name: "installationLocationIdFromApplication"
            type: "string"
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "getInstallationLocation"
            type: "QVariantMap"
            Parameter { name: "installationLocationId"; type: "string"; }
        }
        Method {
            name: "startPackageInstallation"
            type: "string"
            Parameter { name: "installationLocationId"; type: "string"; }
            Parameter { name: "sourceUrl"; type: "string"; }
        }
        Method {
            name: "acknowledgePackageInstallation"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "removePackage"
            type: "string"
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "keepDocuments"; type: "bool"; }
            Parameter { name: "force"; type: "bool"; }
        }
        Method {
            name: "removePackage"
            type: "string"
            Parameter { name: "applicationId"; type: "string"; }
            Parameter { name: "keepDocuments"; type: "bool"; }
        }
        Method {
            name: "taskState"
            type: "TaskState"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "taskApplicationId"
            type: "string"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "activeTaskIds"
            type: "QStringList"
        }
        Method {
            name: "cancelTask"
            type: "bool"
            Parameter { name: "taskId"; type: "string"; }
        }
        Method {
            name: "compareVersions"
            type: "int"
            Parameter { name: "version1"; type: "string"; }
            Parameter { name: "version2"; type: "string"; }
        }
        Method {
            name: "validateDnsName"
            type: "bool"
            Parameter { name: "name"; type: "string"; }
            Parameter { name: "minimumParts"; type: "int"; }
        }
        Method {
            name: "validateDnsName"
            type: "bool"
            Parameter { name: "name"; type: "string"; }
        }
        Method {
            name: "installedApplicationSize"
            type: "int"
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "installedApplicationExtraMetaData"
            type: "QVariantMap"
            Parameter { name: "applicationId"; type: "string"; }
        }
        Method {
            name: "installedApplicationExtraSignedMetaData"
            type: "QVariantMap"
            Parameter { name: "applicationId"; type: "string"; }
        }
    }
    Component {
        name: "ApplicationManager"
        exports: [ "QtApplicationManager.SystemUI/ApplicationManager 2.0" ]
        exportMetaObjectRevisions: [ 0 ]
        prototype: "QAbstractListModel"
        isSingleton: true
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "singleProcess"; type: "bool"; isReadonly: true }
        Property { name: "shuttingDown"; type: "bool"; isReadonly: true }
        Property { name: "securityChecksEnabled"; type: "bool"; isReadonly: true }
        Property { name: "dummy"; type: "bool"; isReadonly: true }
        Property { name: "windowManagerCompositorReady"; type: "bool"; isReadonly: true }
        Property { name: "systemProperties"; type: "QVariantMap"; isReadonly: true }
        Property { name: "containerSelectionFunction"; type: "QJSValue"; }
        Signal {
            name: "applicationRunStateChanged"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "runState"; type: "RunState"; }
        }
        Signal {
            name: "applicationWasActivated"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "aliasId"; type: "string"; }
        }
        Signal {
            name: "countChanged"
        }
        Signal {
            name: "applicationAdded"
            Parameter { name: "id"; type: "string"; }
        }
        Signal {
            name: "applicationAboutToBeRemoved"
            Parameter { name: "id"; type: "string"; }
        }
        Signal {
            name: "applicationChanged"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "changedRoles"; type: "QStringList"; }
        }
        Signal {
            name: "windowManagerCompositorReadyChanged"
            Parameter { name: "ready"; type: "bool"; }
        }
        Signal {
            name: "openUrlRequested"
            Parameter { name: "requestId"; type: "string"; }
            Parameter { name: "url"; type: "string"; }
            Parameter { name: "mimeType"; type: "string"; }
            Parameter { name: "possibleAppIds"; type: "QStringList"; }
        }
        Signal {
            name: "memoryLowWarning"
        }
        Signal {
            name: "memoryCriticalWarning"
        }
        Signal {
            name: "containerSelectionFunctionChanged"
        }
        Signal {
            name: "shuttingDownChanged"
        }
        Signal {
            name: "shutDownFinished"
        }
        Method {
            name: "shutDown"
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "application"
            type: "Application"; isPointer: true;
            Parameter { name: "index"; type: "int"; }
        }
        Method {
            name: "application"
            type: "Application"; isPointer: true;
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "indexOfApplication"
            type: "int"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "indexOfApplication"
            type: "int"
            Parameter { name: "application"; type: "Application"; isPointer: true; }
        }
        Method {
            name: "acknowledgeOpenUrlRequest"
            Parameter { name: "requestId"; type: "string"; }
            Parameter { name: "appId"; type: "string"; }
        }
        Method {
            name: "rejectOpenUrlRequest"
            Parameter { name: "requestId"; type: "string"; }
        }
        Method {
            name: "applicationIds"
            type: "QStringList"
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "startApplication"
            type: "bool"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "documentUrl"; type: "string"; }
        }
        Method {
            name: "startApplication"
            type: "bool"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "debugApplication"
            type: "bool"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "debugWrapper"; type: "string"; }
            Parameter { name: "documentUrl"; type: "string"; }
        }
        Method {
            name: "debugApplication"
            type: "bool"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "debugWrapper"; type: "string"; }
        }
        Method {
            name: "stopApplication"
            Parameter { name: "id"; type: "string"; }
            Parameter { name: "forceKill"; type: "bool"; }
        }
        Method {
            name: "stopApplication"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "stopAllApplications"
            Parameter { name: "forceKill"; type: "bool"; }
        }
        Method {
            name: "stopAllApplications"
        }
        Method {
            name: "openUrl"
            type: "bool"
            Parameter { name: "url"; type: "string"; }
        }
        Method {
            name: "capabilities"
            type: "QStringList"
            Parameter { name: "id"; type: "string"; }
        }
        Method {
            name: "identifyApplication"
            type: "string"
            Parameter { name: "pid"; type: "int"; }
        }
        Method {
            name: "identifyAllApplications"
            type: "QStringList"
            Parameter { name: "pid"; type: "int"; }
        }
        Method {
            name: "applicationRunState"
            type: "RunState"
            Parameter { name: "id"; type: "string"; }
        }
    }
}
