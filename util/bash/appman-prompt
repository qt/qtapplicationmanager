# Copyright (C) 2021 The Qt Company Ltd.
# Copyright (C) 2019 Luxoft Sweden AB
# Copyright (C) 2018 Pelagicore AG
# SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only WITH Qt-GPL-exception-1.0

_appman()
{
    local cur opts dbusopts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    opts="-c -h -o -v -I --build-config --builtin-apps-manifest-dir --clear-cache --config-file --development-mode \
--dbus --disable-installer --disable-intents --disable-watchdog --document-dir --force-multi-process \
--force-single-process --fullscreen --help --installation-dir --instance-id --load-dummydata --log-instant \
--logging-rule --no-cache --no-dlt-logging --no-fullscreen --no-security --option --qml-debug --single-app \
--slow-animations --verbose --version --wayland-socket-name"
    dbusopts="auto session system none"

    if [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    else
        if [ ${COMP_CWORD} -gt 1 ] && [[ ${COMP_WORDS[COMP_CWORD-1]} == "--dbus" ]] ; then
            COMPREPLY=( $(compgen -W "${dbusopts}" -- ${cur}) )
        else
            COMPREPLY=( $(compgen -f -- ${cur}) )
        fi
    fi
}
complete -o filenames -F _appman appman appman-qmltestrunner

_appman-controller()
{
    local cur commands opts pos args
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    commands="start-application debug-application stop-application stop-all-applications list-applications \
show-application list-packages show-package install-package remove-package list-installation-tasks \
cancel-installation-task list-installation-locations show-installation-location list-instances inject-intent-request"
    opts="-h -v --help --help-all --version"

    if [ ${COMP_CWORD} -eq 1 ] && [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    else
        pos=0
        args=()
        for i in "${COMP_WORDS[@]:1:${COMP_CWORD}}" ; do
            [[ ${i} != -* ]] && ((++pos)) && args+=(${i})
        done

        if [ ${pos} -eq 1 ]; then
            COMPREPLY=( $(compgen -W "${commands}" -- ${cur}) )
        elif [ ${pos} -eq 2 ]; then
            case "${args[0]}" in
            start-application|debug-application|stop-application|show-application)
                eval cmd="${COMP_WORDS[0]}"
                apps="$(${cmd} list-applications 2> /dev/null)"
                COMPREPLY=( $(compgen -W "${apps}" -- ${cur}) )
                ;;
            install-package)
                COMPREPLY=( $(compgen -f -- ${cur}) )
                ;;
            cancel-installation-task)
                eval cmd="${COMP_WORDS[0]}"
                tasks="$(${cmd} list-installation-tasks 2> /dev/null)"
                COMPREPLY=( $(compgen -W "${tasks}" -- ${cur}) )
                ;;
            show-installation-location)
                eval cmd="${COMP_WORDS[0]}"
                apps="$(${cmd} list-applications 2> /dev/null)"
                COMPREPLY=( $(compgen -W "${apps}" -- ${cur}) )
                ;;
            show-package|remove-package)
                eval cmd="${COMP_WORDS[0]}"
                packages="$(${cmd} list-packages 2> /dev/null)"
                COMPREPLY=( $(compgen -W "${packages}" -- ${cur}) )
                ;;
            esac
        fi
    fi
}
complete -o filenames -F _appman-controller appman-controller

_appman-packager()
{
    local cur commands opts pos args
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    commands="create-package dev-sign-package dev-verify-package store-sign-package store-verify-package yaml-to-json"
    opts="-h -v --help --help-all --version"

    if [ ${COMP_CWORD} -eq 1 ] && [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    else
        pos=0
        args=()
        for i in "${COMP_WORDS[@]:1:${COMP_CWORD}}" ; do
            [[ ${i} != -* ]] && ((++pos)) && args+=(${i})
        done

        if [ ${pos} -eq 1 ]; then
            COMPREPLY=( $(compgen -W "${commands}" -- ${cur}) )
        else
            file=0
            case "${args[0]}" in
            create-package)
                [ ${pos} -eq 3 ] && file=1
                ;;
            dev-sign-package|store-sign-package)
                [ ${pos} -lt 5 ] && file=1
                ;;
            dev-verify-package|store-verify-package|yaml-to-json)
                file=1
                ;;
            esac
            [ ${file} -eq 1 ] && COMPREPLY=( $(compgen -f -- ${cur}) )
        fi
    fi
}
complete -o filenames -F _appman-packager appman-packager

_appman-package-server()
{
    local cur opts fopts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    opts="-h -v --help --help-all --version --dd --data-directory --la --listen-address --pi --project-id \
--sc --sp --dc --cc --create-config"
    fopts=("--dd" "--data-directory" "--sc" "--dc")

    if [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    elif [ ${COMP_CWORD} -gt 1 ] && [[ " ${fopts[*]} " = *" ${COMP_WORDS[COMP_CWORD-1]} "* ]] ; then
        COMPREPLY=( $(compgen -f -- ${cur}) )
    fi
}
complete -o filenames -F _appman-package-server appman-package-server
